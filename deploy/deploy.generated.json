{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "1161412178011391872"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "cmsipg",
      "metadata": {
        "description": "A prefix to add to the start of all resource names. Note: A \"unique\" suffix will also be added"
      }
    },
    "containerAppImage": {
      "type": "string",
      "defaultValue": "ghcr.io/scottholden/managedidentitywithc:release",
      "metadata": {
        "description": "The container image to run"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to all deployed resources"
      }
    },
    "pgSkuTier": {
      "type": "string",
      "defaultValue": "Burstable"
    },
    "pgSkuName": {
      "type": "string",
      "defaultValue": "Standard_B1ms"
    },
    "pgVersion": {
      "type": "string",
      "defaultValue": "16"
    },
    "pgStorageSizeGB": {
      "type": "int",
      "defaultValue": 128
    },
    "pgStorageTier": {
      "type": "string",
      "defaultValue": "P10"
    }
  },
  "variables": {
    "databaseName": "postgres",
    "uniqueNameFormat": "[format('{0}-{{0}}-{1}', parameters('prefix'), uniqueString(resourceGroup().id, parameters('prefix')))]"
  },
  "resources": [
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
      "apiVersion": "2023-12-01-preview",
      "name": "[format('{0}/{1}', format(variables('uniqueNameFormat'), 'pg'), 'AllowAllAzureServicesAndResourcesWithinAzureIps')]",
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format(variables('uniqueNameFormat'), 'pg'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2023-12-01-preview",
      "name": "[format(variables('uniqueNameFormat'), 'pg')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('pgSkuName')]",
        "tier": "[parameters('pgSkuTier')]"
      },
      "properties": {
        "createMode": "Default",
        "version": "[parameters('pgVersion')]",
        "network": {
          "publicNetworkAccess": "Enabled"
        },
        "storage": {
          "storageSizeGB": "[parameters('pgStorageSizeGB')]",
          "autoGrow": "Disabled",
          "tier": "[parameters('pgStorageTier')]"
        },
        "backup": {
          "geoRedundantBackup": "Disabled",
          "backupRetentionDays": 7
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "authConfig": {
          "activeDirectoryAuth": "Enabled",
          "passwordAuth": "Disabled",
          "tenantId": "[tenant().tenantId]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format(variables('uniqueNameFormat'), 'logs')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2024-03-01",
      "name": "[format(variables('uniqueNameFormat'), 'containerapp')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs')), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format(variables('uniqueNameFormat'), 'logs'))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2024-03-01",
      "name": "[parameters('prefix')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', format(variables('uniqueNameFormat'), 'containerapp'))]",
        "template": {
          "containers": [
            {
              "name": "sampleapp",
              "image": "[parameters('containerAppImage')]",
              "resources": {
                "cpu": "[json('.25')]",
                "memory": ".5Gi"
              },
              "env": [
                {
                  "name": "DB_HOSTNAME",
                  "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format(variables('uniqueNameFormat'), 'pg')), '2023-12-01-preview').fullyQualifiedDomainName]"
                },
                {
                  "name": "DB_NAME",
                  "value": "[variables('databaseName')]"
                },
                {
                  "name": "DB_USERNAME",
                  "value": "[parameters('prefix')]"
                }
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', format(variables('uniqueNameFormat'), 'containerapp'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format(variables('uniqueNameFormat'), 'pg'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-pgAdmin', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "objectId": {
            "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('prefix')), '2024-03-01', 'full').identity.principalId]"
          },
          "postgresName": {
            "value": "[format(variables('uniqueNameFormat'), 'pg')]"
          },
          "principalName": {
            "value": "[parameters('prefix')]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "12272037233871614620"
            }
          },
          "parameters": {
            "postgresName": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            },
            "principalName": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "allowedValues": [
                "User",
                "ServicePrincipal"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
              "apiVersion": "2023-12-01-preview",
              "name": "[format('{0}/{1}', parameters('postgresName'), parameters('objectId'))]",
              "properties": {
                "principalType": "[parameters('principalType')]",
                "principalName": "[parameters('principalName')]",
                "tenantId": "[tenant().tenantId]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/containerApps', parameters('prefix'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', format(variables('uniqueNameFormat'), 'pg'))]"
      ]
    }
  ]
}